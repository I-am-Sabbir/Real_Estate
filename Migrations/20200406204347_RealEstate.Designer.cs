// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Real_Estate.Models;

namespace Real_Estate.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200406204347_RealEstate")]
    partial class RealEstate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Real_Estate.Models.Apartment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment_Name")
                        .IsRequired();

                    b.Property<int>("BuilderID");

                    b.Property<string>("Details");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Size")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("BuilderID");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Real_Estate.Models.Builder", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company_Name")
                        .IsRequired();

                    b.Property<string>("Contact")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Location")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Builders");
                });

            modelBuilder.Entity("Real_Estate.Models.Buyer", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("userID");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("Real_Estate.Models.Report", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentID");

                    b.Property<int?>("BuyeruserID");

                    b.HasKey("ID");

                    b.HasIndex("ApartmentID");

                    b.HasIndex("BuyeruserID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Real_Estate.Models.Requested", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentID");

                    b.Property<int?>("BuyeruserID");

                    b.HasKey("ID");

                    b.HasIndex("ApartmentID");

                    b.HasIndex("BuyeruserID");

                    b.ToTable("Requesteds");
                });

            modelBuilder.Entity("Real_Estate.Models.User", b =>
                {
                    b.Property<int>("ID");

                    b.Property<string>("user_name");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ID", "user_name");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Real_Estate.Models.Apartment", b =>
                {
                    b.HasOne("Real_Estate.Models.Builder", "Builder")
                        .WithMany("Apartments")
                        .HasForeignKey("BuilderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Real_Estate.Models.Report", b =>
                {
                    b.HasOne("Real_Estate.Models.Apartment", "Apartment")
                        .WithMany("Reports")
                        .HasForeignKey("ApartmentID");

                    b.HasOne("Real_Estate.Models.Buyer", "Buyer")
                        .WithMany("Reports")
                        .HasForeignKey("BuyeruserID");
                });

            modelBuilder.Entity("Real_Estate.Models.Requested", b =>
                {
                    b.HasOne("Real_Estate.Models.Apartment", "Apartment")
                        .WithMany("Requesteds")
                        .HasForeignKey("ApartmentID");

                    b.HasOne("Real_Estate.Models.Buyer", "Buyer")
                        .WithMany("Requesteds")
                        .HasForeignKey("BuyeruserID");
                });

            modelBuilder.Entity("Real_Estate.Models.User", b =>
                {
                    b.HasOne("Real_Estate.Models.Builder")
                        .WithOne("User")
                        .HasForeignKey("Real_Estate.Models.User", "ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Real_Estate.Models.Buyer")
                        .WithOne("User")
                        .HasForeignKey("Real_Estate.Models.User", "ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
